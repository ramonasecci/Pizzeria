@model Pizzeria.Models.Ordini

@{
    ViewBag.Title = "Edit";
}

<h2>Edit Ordine</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="card">
        <div class="card-body">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Ordine_ID)
            @Html.HiddenFor(model => model.User_ID)

            <div class="form-group row">
                @Html.LabelFor(model => model.Indirizzo, htmlAttributes: new { @class = "col-sm-2 col-form-label font-weight-bold" })
                <div class="col-sm-10">
                    @Html.EditorFor(model => model.Indirizzo, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Indirizzo, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.Note, htmlAttributes: new { @class = "col-sm-2 col-form-label font-weight-bold" })
                <div class="col-sm-10">
                    @Html.EditorFor(model => model.Note, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Note, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.CostoCons, htmlAttributes: new { @class = "col-sm-2 col-form-label font-weight-bold" })
                <div class="col-sm-10">
                    @Html.EditorFor(model => model.CostoCons, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CostoCons, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.Totale, "Totale", htmlAttributes: new { @class = "col-sm-2 col-form-label font-weight-bold" })
                <div class="col-sm-10">
                    @Html.EditorFor(model => model.Totale, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Totale, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.Stato, "Stato", htmlAttributes: new { @class = "col-sm-2 col-form-label font-weight-bold" })
                <div class="col-sm-10">
                    @Html.DropDownList("Stato", new SelectList(new[]
                    {
                        new SelectListItem { Text = "Preparazione", Value = "Preparazione" },
                        new SelectListItem { Text = "Evaso", Value = "Evaso" }
                    }, "Value", "Text"), htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Stato, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.Data, "Data", htmlAttributes: new { @class = "col-sm-2 col-form-label font-weight-bold" })
                <div class="col-sm-10">
                    @Html.EditorFor(model => model.Data, new { htmlAttributes = new { @class = "form-control", type = "datetime-local" } })
                    @Html.ValidationMessageFor(model => model.Data, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                <div class="col-sm-10 offset-sm-2">
                    <input type="submit" value="Salva" class="btn btn-primary" />
                </div>
            </div>
        </div>
    </div>
}

<div class="mt-3">
    @Html.ActionLink("Torna alla Lista", "Index", null, new { @class = "btn btn-secondary" })
</div>



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
